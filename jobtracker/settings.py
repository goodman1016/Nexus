"""
Django settings for jobtracker project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import importlib
from pathlib import Path
import os
from decouple import config
import dj_database_url

import re

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=False, cast=bool)

ALLOWED_HOSTS = config("ALLOWED_HOSTS", default="").split(",")
if not any(ALLOWED_HOSTS):
    # Default for dev if env not set
    ALLOWED_HOSTS = ["127.0.0.1", "localhost"]

X_FRAME_OPTIONS = 'ALLOWALL'

CSRF_TRUSTED_ORIGINS = [
    'https://nexus-euv2.onrender.com/',
    'http://127.0.0.1:8000',
]

# Application definition

INSTALLED_APPS = [
    'jazzmin',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'jobs',
    
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'jobs.middleware.SingleSessionMiddleware.SingleSessionMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'jobs.middleware.RequireApprovalMiddleware.RequireApprovalMiddleware',
]

ROOT_URLCONF = 'jobtracker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jobtracker.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(default=config("DATABASE_URL"))
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Singapore'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / 'jobs' / 'static',
]

STATIC_ROOT = BASE_DIR / "public" / "static"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

SITE_ID = 1

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

ACCOUNT_EMAIL_VERIFICATION = "none"  # or "optional" if you want confirmation
ACCOUNT_EMAIL_REQUIRED = True

LOGGING = {
    'version': 1,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}

# =================== ADMIN EMAIL SETTINGS ===================

ADMINS = [
    ('Admin', 'johnsonhelios1016@gmail.com'),
]

DEFAULT_FROM_EMAIL = 'johnsonhelios1016@gmail.com'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

ACCOUNT_ADAPTER = 'jobs.adapters.CustomAccountAdapter'

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
        'FIELDS': ['email', 'name', 'given_name', 'family_name'],
    }
}

ACCOUNT_FORMS = {
    'signup': 'jobs.allauth_forms.CustomSignupForm'
}

SOCIALACCOUNT_FORMS = {
    'signup': 'jobs.forms.CustomSocialSignupForm',
}

JAZZMIN_SETTINGS = {
    "site_title": "JobTracker Admin",
    "site_header": "JobTracker Admin Portal",
    "site_brand": "JobTracker",
    "welcome_sign": "Welcome to JobTracker Admin!",
    "show_sidebar": True,
    "navigation_expanded": True,
    "icons": {
        "auth.User": "fas fa-user",
        "auth.Group": "fas fa-users",
        "jobs.JobApplication": "fas fa-briefcase",
        "jobs.CallerRequest": "fas fa-phone",
        "jobs.UserProfile": "fas fa-id-badge",
        "jobs.ApplicationStatus": "fas fa-check-circle",
        "jobs.PaymentBatch": "fas fa-money-check-alt",
        "account.EmailAddress": "fas fa-envelope",
        "socialaccount.SocialAccount": "fab fa-facebook",
        "socialaccount.SocialToken": "fas fa-key",
        "socialaccount.SocialApp": "fas fa-cogs",
    },
    "custom_links": {
        "jobs.JobApplication": [{
            "name": "Documentation",
            "url": "https://docs.djangoproject.com/en/stable/",
            "icon": "fas fa-book",
            "permissions": ["auth.view_user"]
        }]
    },
    "hide_apps": ["sites"],
    "order_with_respect_to": ["auth", "jobs", "account", "socialaccount"],
}

# --- Allow all dynamic Vercel/Now domains in production ---
if not DEBUG:
    class VercelHostPattern(str):
        def __eq__(self, other):
            return (
                re.match(r".*\.vercel\.app$", other or "")
                or re.match(r".*\.now\.sh$", other or "")
            )
        def __hash__(self):
            return 0
    # Allow local hosts too (for migrations etc) and all Vercel/Now domains
    ALLOWED_HOSTS = [
        "127.0.0.1",
        "localhost",
        VercelHostPattern(".vercel.app"),
        VercelHostPattern(".now.sh"),
    ]

print("ALLOWED_HOSTS at runtime:", ALLOWED_HOSTS)

# Allow large admin form submissions
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000